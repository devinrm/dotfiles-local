" Don't load ctrlp
let g:loaded_ctrlp = 1

" Enables a menu at the bottom of the vim window.
set wildmenu
set wildmode=longest:full,full

set undodir=$HOME/.undodir
set undofile

" copy paste to clipboard
set clipboard=unnamed

" highlight search results
set hlsearch 

" Enable mouse cause I like scrolling
":set mouse=a

" Ignore stuff that can't be opened
set wildignore+=tmp/**

" Set region to US English
set spelllang=en_us

" Window size
set winwidth=84
set winheight=10
set winminheight=10
set winheight=999

" Replace all matches on a line instead of just the first
set gdefault

" Pull from keywords in the current file and from the current tags file
set complete=.,b,u,]

" Shows menu and any addition tips
set completeopt=menu,preview

" Use this colorscheme
colorscheme onedark
"colorscheme jellybeans

" Use thoughtbot's Markoff for markdown previews
let g:marked_app = 'Markoff'

" Vim Dispatch
let g:rspec_command = "Dispatch rspec {spec}"
let test#strategy = "dispatch"

" Map Ctrl-s to write the file
nmap <C-s> :w<cr>
imap <C-s> <esc>:w<cr>

" Map Ctrl-t to open new tab
map <C-t> <esc>:tabnew<CR>

" Source (reload) your vimrc. Type space, s, o in sequence to trigger
nmap <leader>so :source $MYVIMRC<cr>
nmap <leader>vr :sp $MYVIMRC<cr>
nmap <leader>so :source $MYVIMRC<cr>

" Pre-populate a split command with the current directory
nmap <Leader>v :vnew <C-r>=escape(expand("%:p:h"), ' ') . '/'<cr>

" Copy the entire buffer into the system register (from @R00k)
nmap <Leader>co mmggVG"*y`m

" Indent guides toggle
nmap <Leader>ig :IndentLinesToggle<cr>

" Edit the db/schema.rb Rails file in a split
nmap <Leader>sc :split db/schema.rb<cr>

" Set paste so paste works properly
map <Leader>p :set paste<CR>o<esc>"*]p:set nopaste<cr>
nnoremap <C-a> :set invpaste paste?<CR>

" Toggle spell checking on and off
nmap <silent> <leader>, :set spell!<CR>

" View commits in fzf
nmap <Leader>c :Commits<cr>

" Require pry (from @R00k)
map <Leader>b obinding.pry<esc>:w<cr>

" Search words with Ag
nmap <Leader>g :Ag 

" Open .html pages from vim in browser
map <silent> <F10> :!open '%'<cr>

" Comment/un-comment like Sublime (from @geoffharcourt)
nnoremap <C-\> :TComment<CR>
vnoremap <C-\> :TComment<CR>

" Use C-Space to Esc out of any mode (from @christoomey)
nnoremap <C-Space> <Esc>:noh<CR>
vnoremap <C-Space> <Esc>gV
onoremap <C-Space> <Esc>
cnoremap <C-Space> <C-c>
inoremap <C-Space> <Esc>`^
" oTerminal sees <C-@> as <C-space> WTF, but ok
nnoremap <C-@> <Esc>:noh<CR>
vnoremap <C-@> <Esc>gV
onoremap <C-@> <Esc>
cnoremap <C-@> <C-c>
inoremap <C-@> <Esc>`^

" Move up and down by visible lines if current line is wrapped
nmap j gj
nmap k gk

" Easy access to the start of the line
nmap 0 ^

" Search with fzf
map <C-p> :Files<cr>
nmap <C-p> :Files<cr>

" Complete from open tmux panes (from @junegunn)
inoremap <expr> <C-x><C-t> fzf#complete('tmuxwords.rb --all-but-current --scroll 499 --min 5')
inoremap <expr> <C-x><C-k> fzf#complete('cat /usr/share/dict/words')

" Mappings to move lines
nnoremap <C-f> :m-2<CR>
nnoremap <C-g> :m+<CR>
inoremap <C-f> <Esc>:m-2<CR>
inoremap <C-g> <Esc>:m+<CR>

" Make yank behave like yank should
vnoremap <expr>y "my\"" . v:register . "y`y"

" Remap V to v
nnoremap v V

" Allow us to use Ctrl-s and Ctrl-q as keybinds
silent !stty -ixon

" Restore default behaviour when leaving Vim.
autocmd VimLeave * silent !stty ixon

" Attempt at setting terminal colors
" let g:terminal_color_0  = '#2e3436'
" let g:terminal_color_1  = '#cc0000'
" let g:terminal_color_2  = '#4e9a06'
" let g:terminal_color_3  = '#c4a000'
" let g:terminal_color_4  = '#3465a4'
" let g:terminal_color_5  = '#75507b'
" let g:terminal_color_6  = '#0b939b'
" let g:terminal_color_7  = '#d3d7cf'
" let g:terminal_color_8  = '#555753'
" let g:terminal_color_9  = '#ef2929'
" let g:terminal_color_10 = '#8ae234'
" let g:terminal_color_11 = '#fce94f'
" let g:terminal_color_12 = '#729fcf'
" let g:terminal_color_13 = '#ad7fa8'
" let g:terminal_color_14 = '#00f5e9'
" let g:terminal_color_15 = '#eeeeec'

" This statement has to come late in order to work (from @geoffharcourt)
highlight Comment cterm=italic

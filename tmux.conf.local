# Use C-a as the prefix key
unbind C-b
set -g prefix C-s

# Use emacs instead of vi keybindings for prompt
set-option -g status-keys "emacs"

# Easy reloading of the tmux.conf configuration file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Faster escape times
set -s escape-time 10

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# More intuitive pane splitting key-bindings, open all in current path
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Easy resizing of panes with fine and coarse adjustment
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Break a pane out to a new window
bind-key b break-pane -d

# Allow the session name in status left to display up to 50 characters
set -g status-left " #S => "
set-option -g status-left-length 50

# More useful status-right with battery percentage and nicely formated datetime
set -g status-right "#(battery -p -t -g '#d75f87')  #(date '+%a, %b %d - %H:%M') "

# Change pane border color
set -g pane-border-fg '#5f5f87'
set -g pane-active-border-fg '#5f875f'
set -g pane-active-border-bg default

# set status bar color
set -g status-fg '#d75f87'
set -g status-bg '#404242'

# set tab color
set-window-option -g window-status-current-bg '#ffffff'

# Bind <c-j> to choose-tree and integrate with fzf
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Restore clear screen
bind C-l send-keys 'C-l'

# Quickly view system & process info in htop
bind-key h split-window -h "htop"

# keybinding for gitsh
bind-key g split-window -v -c '#{pane_current_path}' -p 50 gitsh

# Break out of session without exiting current session
bind-key C-b send-keys 'tat && exit' 'C-m'

# Kill session
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
